apiVersion: workflow.symphony/v1
kind: CampaignContainer
metadata:
  name: update
spec:
---
apiVersion: workflow.symphony/v1
kind: Campaign
metadata:
  name: update-v-v1
spec:
  rootResource: update
  firstStage: register
  selfDriving: true
  stages:
    register:
      name: register
      provider: providers.stage.materialize
      config:
        baseUrl: http://localhost:8082/v1alpha2/
        user: admin
        password: ""
      stageSelector: update
    update-trigger:
      name: update-trigger
      provider: providers.stage.http
      config:
        name: trigger
        url: http://localhost:8085/check-update
        method: "POST"
        successCodes: [ 200, 202 ]
      stageSelector: ${{$if($eq($output(update-trigger, statusCode), 200), update, end)}}
    update:
      name: update
      provider: providers.stage.http
      config:
        name: test
        url: http://localhost:8082/targets/registry/ankaios-target
        method: "POST"
        successCodes: [ 200, 202 ]
      inputs:
        body: ${{$trigger(target)}}
    #   stageSelector: dock
    # fuel:
    #   name: fuel
    #   provider: providers.stage.http
    #   config:
    #     name: fuel
    #     url: http://host.minikube.internal:8000/fuel
    #     method: "POST"
    #     successCodes: [ 200, 202 ]
    #   inputs:
    #     body:
    #       current_fuel: ${{$trigger(fuel, 0)}}
    #       target: 100
    #       image: ${{$trigger(image.url, "")}}
    #   stageSelector: check-fuel-state
    # dock:
    #   name: dock
    #   provider: providers.stage.http
    #   config:
    #     name: dock
    #     url: http://host.minikube.internal:8000/dock
    #     method: "POST"
    #     successCodes: [ 200, 202 ]
    #   inputs:
    #     body:
    #       current_fuel: ${{$trigger(fuel, 0)}}
    #       image: ${{$trigger(image.url, "")}}
    #       name: ${{$trigger(truck.name, "")}}
    #   stageSelector: check-fuel-state
    # check-fuel-state:
    #   name: check-fuel-state
    #   provider: providers.stage.http
    #   config:
    #     name: check-fuel-state
    #     url: http://host.minikube.internal:8000/fuel # GET not working for string replacement
    #     method: "POST"
    #     successCodes: [ 200, 202 ]
    #   inputs:
    #     body:
    #       name: ${{$trigger(truck.name, "")}}
    #   stageSelector: ${{$if($lt($output(check-fuel-state, body), 100), delay, undock)}}
    # delay:
    #   name: delay
    #   provider: providers.stage.delay
    #   inputs:
    #     delay: 5s
    #   stageSelector: check-fuel-state
    # undock:
    #   name: undock
    #   provider: providers.stage.http
    #   config:
    #     name: undock
    #     url: http://host.minikube.internal:8000/undock
    #     method: "POST"
    #     successCodes: [ 200, 202 ]
    #   inputs:
    #     body:
    #       name: ${{$trigger(truck.name, "")}}
